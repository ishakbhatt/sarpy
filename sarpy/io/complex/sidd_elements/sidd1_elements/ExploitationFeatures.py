# -*- coding: utf-8 -*-
"""
The ExploitationFeaturesType definition for SIDD 1.0
"""

from typing import List

from ..base import DEFAULT_STRICT

# noinspection PyProtectedMember
from ...sicd_elements.base import Serializable, _SerializableDescriptor, _SerializableListDescriptor
from ..ExploitationFeatures import CollectionType, ExploitationFeaturesProductType

__classification__ = "UNCLASSIFIED"
__author__ = "Thomas McCullough"


class ExploitationFeaturesType(Serializable):
    """
    Computed metadata regarding the collect.
    """
    _fields = ('Collections', 'Product')
    _required = ('Collections', 'Product')
    _collections_tags = {
        'Collections': {'array': False, 'child_tag': 'Collection'}}
    # Descriptor
    Collections = _SerializableListDescriptor(
        'Collections', CollectionType, _collections_tags, _required, strict=DEFAULT_STRICT,
        docstring='')  # type: List[CollectionType]
    Product = _SerializableDescriptor(
        'Product', ExploitationFeaturesProductType, _required, strict=DEFAULT_STRICT,
        docstring='')  # type: ExploitationFeaturesProductType

    def __init__(self, Collections=None, Product=None, **kwargs):
        """

        Parameters
        ----------
        Collections : List[CollectionType]
        Product : ExploitationFeaturesProductType
        kwargs
        """

        if '_xml_ns' in kwargs:
            self._xml_ns = kwargs['_xml_ns']
        if '_xml_ns_key' in kwargs:
            self._xml_ns_key = kwargs['_xml_ns_key']
        self.Collections = Collections
        self.Product = Product
        super(ExploitationFeaturesType, self).__init__(**kwargs)
